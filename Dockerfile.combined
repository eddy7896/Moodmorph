# Combined Dockerfile for MoodMorph (Frontend + Backend)
# Using multi-stage builds to keep the final image size small

# ========== Backend Build Stage ==========
FROM node:18-alpine as backend-build

# Install dependencies for Puppeteer
RUN apk add --no-cache \
    chromium \
    nss \
    freetype \
    freetype-dev \
    harfbuzz \
    ca-certificates \
    ttf-freefont

# Set Puppeteer environment variables
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \
    PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser

WORKDIR /app

# Create backend directory
RUN mkdir -p backend

# Copy root package files
COPY package*.json ./

# Install root dependencies (if any)
RUN npm install

# Copy backend package files
WORKDIR /app/backend
COPY backend/package*.json ./

# Install backend dependencies
RUN npm ci --only=production

# Copy backend source code
WORKDIR /app
COPY backend/ ./backend/

# ========== Frontend Build Stage ==========
FROM node:18-alpine as frontend-build

WORKDIR /app

# Create frontend directory
RUN mkdir -p frontend

# Copy frontend package files
COPY frontend/package*.json ./frontend/

# Install frontend dependencies
WORKDIR /app/frontend
RUN npm install

# Copy frontend source code
WORKDIR /app
COPY frontend/ ./frontend/

# Build the frontend
WORKDIR /app/frontend
RUN npm run build

# ========== Production Stage ==========
FROM nginx:alpine

# Install Node.js for the backend
RUN apk add --no-cache nodejs

# Set working directory for backend
WORKDIR /app/backend

# Copy backend files from build stage
COPY --from=backend-build /app/backend ./

# Copy frontend build to nginx
COPY --from=frontend-build /app/frontend/build /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose ports
EXPOSE 80 5000

# Create a script to start both services
RUN echo '#!/bin/sh\n\
# Start nginx in the background\n\
nginx -g "daemon off;" &\n\
# Start the backend server\n\
cd /app/backend && node server.js\n\
# Keep the container running\n\
tail -f /dev/null\n' > /start.sh && \
chmod +x /start.sh

# Start the application
CMD ["/start.sh"]
